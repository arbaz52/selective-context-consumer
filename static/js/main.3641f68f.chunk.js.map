{"version":3,"sources":["components/SelectiveContextConsumerChild/index.tsx","components/SelectiveContextConsumer/index.tsx","contexts/StateContext/index.ts","components/Beer/index.tsx","components/Honey/index.tsx","components/Component/index.tsx","components/App/index.tsx","index.tsx"],"names":["SelectiveContextConsumerChild","name","value","children","console","debug","React","useEffect","MemoizedSelectiveContextConsumerChild","memo","pvProps","nxtProps","key","SelectiveContextConsumer","context","selector","contextObj","useContext","selection","useMemo","defaultValue","beer","honey","addBeer","addHoney","StateContext","createContext","Beer","onClick","Honey","useCallback","Component","MemoizedComponent","App","useReducer","state","stateContext","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3641f68f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { ISelectiveContextConsumerChildProps } from \"./types\";\n\nfunction SelectiveContextConsumerChild<Value>({\n  name,\n  value,\n  children,\n}: ISelectiveContextConsumerChildProps<Value>) {\n  if (name)\n    console.debug(`${name}: StateConsumerChild.render, value: ${typeof value}`);\n\n  React.useEffect(() => {\n    if (!name) return;\n    console.debug(`${name}: StateConsumerChild.children changed`);\n  }, [children, name]);\n\n  React.useEffect(() => {\n    if (!name) return;\n    console.debug(`${name}: StateConsumerChild.children changed`);\n  }, [children, name]);\n\n  return <>{children(value)}</>;\n}\n\nexport const MemoizedSelectiveContextConsumerChild = React.memo(\n  SelectiveContextConsumerChild,\n  (pvProps, nxtProps) => {\n    if (pvProps.name) console.debug(pvProps, nxtProps);\n    switch (typeof pvProps.value) {\n      case \"object\":\n        for (let key in pvProps.value) {\n          //@ts-ignore\n          if (pvProps.value[key] !== nxtProps.value[key]) return false;\n        }\n        break;\n      default:\n        if (pvProps.value !== nxtProps.value) return false;\n    }\n    if (pvProps.children !== nxtProps.children) return false;\n    return true;\n  }\n) as typeof SelectiveContextConsumerChild;\n\nexport default SelectiveContextConsumerChild;\n","import React from \"react\";\n\nimport { MemoizedSelectiveContextConsumerChild } from \"components/SelectiveContextConsumerChild\";\n\nimport { ISelectiveContextConsumerProps } from \"./types\";\n\nfunction SelectiveContextConsumer<Context, Value>({\n  name,\n  context,\n  selector,\n  children,\n}: ISelectiveContextConsumerProps<Context, Value>) {\n  const contextObj = React.useContext(context);\n\n  const selection = React.useMemo(\n    () => selector(contextObj),\n    [selector, contextObj]\n  );\n\n  React.useEffect(() => {\n    if (!name) return;\n    console.debug(`${name}: selector changed`);\n  }, [selector, name]);\n\n  React.useEffect(() => {\n    if (!name) return;\n    console.debug(`${name}: context changed`);\n  }, [context, name]);\n\n  React.useEffect(() => {\n    if (!name) return;\n    console.debug(`${name}: selection changed`);\n  }, [selection, name]);\n\n  React.useEffect(() => {\n    if (!name) return;\n    console.debug(`${name}: contextObj changed`);\n  }, [contextObj, name]);\n\n  React.useEffect(() => {\n    if (!name) return;\n    console.debug(`${name}: StateConsumer.children changed`);\n  }, [children, name]);\n\n  return (\n    <MemoizedSelectiveContextConsumerChild\n      name={name}\n      value={selection}\n      children={children}\n    />\n  );\n}\n\nexport default SelectiveContextConsumer;\n","import React from \"react\";\n\nimport { IStateContext } from \"./types\";\n\nconst defaultValue: IStateContext = {\n  beer: 0,\n  honey: 0,\n  addBeer: () => {},\n  addHoney: () => {},\n};\n\nconst StateContext = React.createContext(defaultValue);\n\nexport default StateContext;\n","import React from \"react\";\n\nimport SelectiveContextConsumer from \"components/SelectiveContextConsumer\";\n\nimport StateContext from \"contexts/StateContext\";\n\nconst Beer: React.FC = () => {\n  console.debug(\"Beer.render\");\n\n  return (\n    <SelectiveContextConsumer\n      context={StateContext}\n      selector={({ beer, addBeer }) => ({\n        beer,\n        addBeer,\n      })}\n      name=\"beer\"\n    >\n      {(value: any) => {\n        console.debug(\"beer.render\");\n        return <button onClick={value.addBeer}>{`beer: ${value.beer}`}</button>;\n      }}\n    </SelectiveContextConsumer>\n  );\n};\n\nexport default Beer;\n","import React from \"react\";\n\nimport SelectiveContextConsumer from \"components/SelectiveContextConsumer\";\n\nimport StateContext from \"contexts/StateContext\";\nimport { IStateContext } from \"contexts/StateContext/types\";\n\nconst Honey: React.FC = () => {\n  console.debug(\"Honey.render\");\n  const selector = React.useCallback(\n    ({ honey, addHoney }: IStateContext) => ({ honey, addHoney }),\n    []\n  );\n  return (\n    <SelectiveContextConsumer\n      name=\"honey\"\n      selector={selector}\n      context={StateContext}\n    >\n      {(value) => {\n        console.debug(\"honey.render\");\n        return (\n          <button onClick={value.addHoney}>{`honey: ${value.honey}`}</button>\n        );\n      }}\n    </SelectiveContextConsumer>\n  );\n};\n\nexport default Honey;\n","import React from \"react\";\n\nimport Beer from \"components/Beer\";\nimport Honey from \"components/Honey\";\n\nconst Component: React.FC = () => {\n  return (\n    <>\n      <Beer />\n      <Honey />\n    </>\n  );\n};\n\nexport const MemoizedComponent = React.memo(Component);\n\nexport default Component;\n","import React from \"react\";\n\nimport { MemoizedComponent } from \"components/Component\";\n\nimport StateContext from \"contexts/StateContext\";\n\nimport { IStateContext } from \"contexts/StateContext/types\";\n\nconst App: React.FC = () => {\n  console.debug(\"App.render\");\n  const [beer, addBeer] = React.useReducer((state) => state + 1, 0);\n  const [honey, addHoney] = React.useReducer((state) => state + 1, 0);\n\n  const stateContext = React.useMemo<IStateContext>(\n    () => ({\n      beer,\n      honey,\n      addBeer,\n      addHoney,\n    }),\n    [beer, honey]\n  );\n\n  return (\n    <StateContext.Provider value={stateContext}>\n      <MemoizedComponent />\n    </StateContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}